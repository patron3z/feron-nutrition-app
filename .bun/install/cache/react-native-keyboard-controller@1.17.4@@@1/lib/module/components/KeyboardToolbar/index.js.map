{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","StyleSheet","Text","View","FocusedInputEvents","KeyboardController","useColorScheme","KeyboardStickyView","Arrow","Button","colors","TEST_ID_KEYBOARD_TOOLBAR","TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS","TEST_ID_KEYBOARD_TOOLBAR_NEXT","TEST_ID_KEYBOARD_TOOLBAR_CONTENT","TEST_ID_KEYBOARD_TOOLBAR_DONE","KEYBOARD_TOOLBAR_HEIGHT","DEFAULT_OPACITY","KeyboardToolbar","props","content","theme","doneText","button","icon","showArrows","onNextCallback","onPrevCallback","onDoneCallback","blur","opacity","offset","closed","opened","enabled","insets","rest","colorScheme","inputs","setInputs","current","count","isPrevDisabled","isNextDisabled","subscription","addListener","e","remove","doneStyle","styles","doneButton","color","primary","toolbarStyle","toolbar","backgroundColor","background","paddingLeft","left","paddingRight","right","ButtonContainer","IconContainer","onPressNext","event","isDefaultPrevented","setFocusTo","onPressPrev","onPressDone","dismiss","createElement","_extends","style","testID","arrows","accessibilityHint","accessibilityLabel","disabled","onPress","type","flex","rippleRadius","doneButtonContainer","maxFontSizeMultiplier","create","position","bottom","alignItems","width","flexDirection","height","fontWeight","fontSize","marginRight","marginLeft","DefaultKeyboardToolbarTheme"],"sources":["index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { FocusedInputEvents } from \"../../bindings\";\nimport { KeyboardController } from \"../../module\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport KeyboardStickyView from \"../KeyboardStickyView\";\n\nimport Arrow from \"./Arrow\";\nimport Button from \"./Button\";\nimport { colors } from \"./colors\";\n\nimport type { HEX, KeyboardToolbarTheme } from \"./types\";\nimport type { KeyboardStickyViewProps } from \"../KeyboardStickyView\";\nimport type { ReactNode } from \"react\";\nimport type { GestureResponderEvent, ViewProps } from \"react-native\";\n\ntype SafeAreaInsets = {\n  left: number;\n  right: number;\n};\n\nexport type KeyboardToolbarProps = Omit<\n  ViewProps,\n  \"style\" | \"testID\" | \"children\"\n> & {\n  /** An element that is shown in the middle of the toolbar. */\n  content?: React.JSX.Element | null;\n  /** A set of dark/light colors consumed by toolbar component. */\n  theme?: KeyboardToolbarTheme;\n  /** Custom text for done button. */\n  doneText?: ReactNode;\n  /** Custom touchable component for toolbar (used for prev/next/done buttons). */\n  button?: typeof Button;\n  /** Custom icon component used to display next/prev buttons. */\n  icon?: typeof Arrow;\n  /**\n   * Whether to show next and previous buttons. Can be useful to set it to `false` if you have only one input\n   * and want to show only `Done` button. Default to `true`.\n   */\n  showArrows?: boolean;\n  /**\n   * A callback that is called when the user presses the next button along with the default action.\n   */\n  onNextCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the previous button along with the default action.\n   */\n  onPrevCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the done button along with the default action.\n   */\n  onDoneCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A component that applies blur effect to the toolbar.\n   */\n  blur?: React.JSX.Element | null;\n  /**\n   * A value for container opacity in hexadecimal format (e.g. `ff`). Default value is `ff`.\n   */\n  opacity?: HEX;\n  /**\n   * A object containing `left`/`right` properties. Used to specify proper container padding in landscape mode.\n   */\n  insets?: SafeAreaInsets;\n} & Pick<KeyboardStickyViewProps, \"offset\" | \"enabled\">;\n\nconst TEST_ID_KEYBOARD_TOOLBAR = \"keyboard.toolbar\";\nconst TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS = `${TEST_ID_KEYBOARD_TOOLBAR}.previous`;\nconst TEST_ID_KEYBOARD_TOOLBAR_NEXT = `${TEST_ID_KEYBOARD_TOOLBAR}.next`;\nconst TEST_ID_KEYBOARD_TOOLBAR_CONTENT = `${TEST_ID_KEYBOARD_TOOLBAR}.content`;\nconst TEST_ID_KEYBOARD_TOOLBAR_DONE = `${TEST_ID_KEYBOARD_TOOLBAR}.done`;\n\nconst KEYBOARD_TOOLBAR_HEIGHT = 42;\nconst DEFAULT_OPACITY: HEX = \"FF\";\n\n/**\n * `KeyboardToolbar` is a component that is shown above the keyboard with `Prev`/`Next` buttons from left and\n * `Done` button from the right (to dismiss the keyboard). Allows to add customizable content (yours UI elements) in the middle.\n *\n * @param props - Component props.\n * @returns A component that is shown above the keyboard with `Prev`/`Next` and `Done` buttons.\n * @see {@link https://kirillzyusko.github.io/react-native-keyboard-controller/docs/api/components/keyboard-toolbar|Documentation} page for more details.\n * @example\n * ```tsx\n * <KeyboardToolbar doneText=\"Close\" />\n * ```\n */\nconst KeyboardToolbar: React.FC<KeyboardToolbarProps> = (props) => {\n  const {\n    content,\n    theme = colors,\n    doneText = \"Done\",\n    button,\n    icon,\n    showArrows = true,\n    onNextCallback,\n    onPrevCallback,\n    onDoneCallback,\n    blur = null,\n    opacity = DEFAULT_OPACITY,\n    offset: { closed = 0, opened = 0 } = {},\n    enabled = true,\n    insets,\n    ...rest\n  } = props;\n  const colorScheme = useColorScheme();\n  const [inputs, setInputs] = useState({\n    current: 0,\n    count: 0,\n  });\n  const isPrevDisabled = inputs.current === 0;\n  const isNextDisabled = inputs.current === inputs.count - 1;\n\n  useEffect(() => {\n    const subscription = FocusedInputEvents.addListener(\"focusDidSet\", (e) => {\n      setInputs(e);\n    });\n\n    return subscription.remove;\n  }, []);\n  const doneStyle = useMemo(\n    () => [styles.doneButton, { color: theme[colorScheme].primary }],\n    [colorScheme, theme],\n  );\n  const toolbarStyle = useMemo(\n    () => [\n      styles.toolbar,\n      {\n        backgroundColor: `${theme[colorScheme].background}${opacity}`,\n      },\n      {\n        paddingLeft: insets?.left,\n        paddingRight: insets?.right,\n      },\n    ],\n    [colorScheme, opacity, theme, insets],\n  );\n  const offset = useMemo(\n    () => ({ closed: closed + KEYBOARD_TOOLBAR_HEIGHT, opened }),\n    [closed, opened],\n  );\n  const ButtonContainer = button || Button;\n  const IconContainer = icon || Arrow;\n\n  const onPressNext = useCallback(\n    (event: GestureResponderEvent) => {\n      onNextCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.setFocusTo(\"next\");\n      }\n    },\n    [onNextCallback],\n  );\n  const onPressPrev = useCallback(\n    (event: GestureResponderEvent) => {\n      onPrevCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.setFocusTo(\"prev\");\n      }\n    },\n    [onPrevCallback],\n  );\n  const onPressDone = useCallback(\n    (event: GestureResponderEvent) => {\n      onDoneCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.dismiss();\n      }\n    },\n    [onDoneCallback],\n  );\n\n  return (\n    <KeyboardStickyView enabled={enabled} offset={offset}>\n      <View {...rest} style={toolbarStyle} testID={TEST_ID_KEYBOARD_TOOLBAR}>\n        {blur}\n        {showArrows && (\n          <View style={styles.arrows}>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the previous field\"\n              accessibilityLabel=\"Previous\"\n              disabled={isPrevDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS}\n              theme={theme}\n              onPress={onPressPrev}\n            >\n              <IconContainer\n                disabled={isPrevDisabled}\n                theme={theme}\n                type=\"prev\"\n              />\n            </ButtonContainer>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the next field\"\n              accessibilityLabel=\"Next\"\n              disabled={isNextDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_NEXT}\n              theme={theme}\n              onPress={onPressNext}\n            >\n              <IconContainer\n                disabled={isNextDisabled}\n                theme={theme}\n                type=\"next\"\n              />\n            </ButtonContainer>\n          </View>\n        )}\n\n        <View style={styles.flex} testID={TEST_ID_KEYBOARD_TOOLBAR_CONTENT}>\n          {content}\n        </View>\n        {doneText && (\n          <ButtonContainer\n            accessibilityHint=\"Closes the keyboard\"\n            accessibilityLabel=\"Done\"\n            rippleRadius={28}\n            style={styles.doneButtonContainer}\n            testID={TEST_ID_KEYBOARD_TOOLBAR_DONE}\n            theme={theme}\n            onPress={onPressDone}\n          >\n            <Text maxFontSizeMultiplier={1.3} style={doneStyle}>\n              {doneText}\n            </Text>\n          </ButtonContainer>\n        )}\n      </View>\n    </KeyboardStickyView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n  toolbar: {\n    position: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: KEYBOARD_TOOLBAR_HEIGHT,\n  },\n  arrows: {\n    flexDirection: \"row\",\n    paddingLeft: 8,\n  },\n  doneButton: {\n    fontWeight: \"600\",\n    fontSize: 15,\n  },\n  doneButtonContainer: {\n    marginRight: 16,\n    marginLeft: 8,\n  },\n});\n\nexport { colors as DefaultKeyboardToolbarTheme };\nexport default KeyboardToolbar;\n"],"mappings":"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","ignoreList":[]}