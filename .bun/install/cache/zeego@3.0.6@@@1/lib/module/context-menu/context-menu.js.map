{"version":3,"sources":["context-menu.tsx"],"names":["ContextMenu","React","create","Root","Trigger","Content","props","Item","e","shouldDismissMenuOnSelect","preventDefault","onSelect","SubTrigger","Group","Separator","CheckboxItem","onValueChange","value","current","next","ItemIndicator","ItemIcon","style","className","children","Preview","Arrow","Sub","SubContent","Auxiliary","_","ItemImage","Label","ItemTitle","ItemSubtitle"],"mappings":"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","sourcesContent":["import * as ContextMenu from '@radix-ui/react-context-menu'\nimport React from 'react'\n\nimport type {\n  ContextMenuContentProps,\n  MenuCheckboxItemProps,\n  MenuItemIconProps,\n  ContextMenuSubContentProps,\n  ContextMenuAuxliliaryProps,\n  MenuItemProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  ContextMenuPreviewProps,\n} from '../menu'\nimport { create } from '../menu/display-names'\n\nconst Root = create(ContextMenu.Root, 'Root')\n\nconst Trigger = create(ContextMenu.Trigger, 'Trigger')\n\nconst Content = create<ContextMenuContentProps>(\n  (props) => (\n    <ContextMenu.Portal>\n      <ContextMenu.Content {...props} />\n    </ContextMenu.Portal>\n  ),\n  'Content'\n)\n\nconst Item = create<MenuItemProps>((props) => {\n  return (\n    <ContextMenu.Item\n      {...props}\n      onSelect={(e) => {\n        if (props.shouldDismissMenuOnSelect === false) {\n          e.preventDefault()\n        }\n        props.onSelect?.()\n      }}\n    />\n  )\n}, 'Item')\n\nconst SubTrigger = create<MenuSubTriggerProps>(\n  (props) => <ContextMenu.SubTrigger {...props} />,\n  'SubTrigger'\n)\n\nconst Group = create(ContextMenu.Group, 'Group')\n\nconst Separator = create(ContextMenu.Separator, 'Separator')\n\nconst CheckboxItem = create<MenuCheckboxItemProps>(\n  ({ shouldDismissMenuOnSelect, onValueChange, value, ...props }) => {\n    return (\n      <ContextMenu.CheckboxItem\n        {...props}\n        checked={typeof value === 'boolean' ? value : value !== 'off'}\n        onSelect={(e) => {\n          const current =\n            value === true ? 'on' : value === false ? 'off' : value\n          const next = current === 'on' ? 'off' : 'on'\n\n          onValueChange?.(next, current)\n\n          if (shouldDismissMenuOnSelect === false) {\n            e.preventDefault()\n          }\n        }}\n      />\n    )\n  },\n  'CheckboxItem'\n)\n\nconst ItemIndicator = create(ContextMenu.ItemIndicator, 'ItemIndicator')\n\nconst ItemIcon = create(\n  ({ style, className, children }: MenuItemIconProps) => (\n    <div style={style} className={className}>\n      {children}\n    </div>\n  ),\n  'ItemIcon'\n)\n\nconst Preview = create<ContextMenuPreviewProps>(() => null, 'Preview')\n\nconst Arrow = create(ContextMenu.Arrow, 'Arrow')\n\nconst Sub = create<MenuSubProps>(\n  (props) => <ContextMenu.Sub {...props} />,\n  'Sub'\n)\n\nconst SubContent = create<ContextMenuSubContentProps>(\n  (props) => (\n    <ContextMenu.Portal>\n      <ContextMenu.SubContent {...props} />\n    </ContextMenu.Portal>\n  ),\n  'SubContent'\n)\n\nconst Auxiliary = create<ContextMenuAuxliliaryProps>((_) => null, 'Auxiliary')\n\nexport {\n  Root,\n  Trigger,\n  Content,\n  Item,\n  SubTrigger,\n  Group,\n  Separator,\n  CheckboxItem,\n  ItemIndicator,\n  ItemIcon,\n  Preview,\n  Arrow,\n  Sub,\n  SubContent,\n  Auxiliary,\n}\n\nexport { ItemImage } from '../menu/web-primitives/item-image'\nexport { Label } from './web/label'\n\nexport { ItemTitle, ItemSubtitle } from '../menu'\n"]}