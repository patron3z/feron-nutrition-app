{"version":3,"sources":["dropdown-menu.tsx"],"names":["Root","DropdownMenu","Trigger","Content","props","Item","e","shouldDismissMenuOnSelect","preventDefault","onSelect","SubTrigger","Group","Separator","CheckboxItem","onValueChange","value","current","next","ItemIndicator","ItemIcon","children","style","className","Arrow","Sub","SubContent"],"mappings":"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","sourcesContent":["import * as DropdownMenu from '@radix-ui/react-dropdown-menu'\nimport * as React from 'react'\n\nimport type {\n  MenuCheckboxItemProps,\n  MenuItemIconProps,\n  MenuItemProps,\n  MenuSubTriggerProps,\n  MenuGroupProps,\n  MenuSubContentProps,\n  MenuContentProps,\n} from '../menu'\nimport { create } from '../menu/display-names'\n\nconst Root = create(DropdownMenu.Root, 'Root')\n\nconst Trigger = create(DropdownMenu.Trigger, 'Trigger')\n\nconst Content = create<MenuContentProps>((props) => {\n  return (\n    <DropdownMenu.Portal>\n      <DropdownMenu.Content {...props} />\n    </DropdownMenu.Portal>\n  )\n}, 'Content')\n\nconst Item = create<MenuItemProps>((props) => {\n  return (\n    <DropdownMenu.Item\n      {...props}\n      onSelect={(e) => {\n        if (props.shouldDismissMenuOnSelect === false) {\n          e.preventDefault()\n        }\n        props.onSelect?.()\n      }}\n    />\n  )\n}, 'Item')\n\nconst SubTrigger = create<MenuSubTriggerProps>(\n  (props) => <DropdownMenu.SubTrigger {...props} />,\n  'SubTrigger'\n)\n\nconst Group = create<MenuGroupProps>(DropdownMenu.Group, 'Group')\n\nconst Separator = create(DropdownMenu.Separator, 'Separator')\n\nconst CheckboxItem = create<MenuCheckboxItemProps>(\n  ({ shouldDismissMenuOnSelect, onValueChange, value, ...props }) => {\n    return (\n      <DropdownMenu.CheckboxItem\n        {...props}\n        checked={typeof value === 'boolean' ? value : value !== 'off'}\n        onSelect={(e) => {\n          const current =\n            value === true ? 'on' : value === false ? 'off' : value\n          const next = current === 'on' ? 'off' : 'on'\n\n          onValueChange?.(next, current)\n\n          if (shouldDismissMenuOnSelect === false) {\n            e.preventDefault()\n          }\n        }}\n      />\n    )\n  },\n  'CheckboxItem'\n)\n\nconst ItemIndicator = create(DropdownMenu.ItemIndicator, 'ItemIndicator')\n\nconst ItemIcon = create(\n  ({ children, style, className }: MenuItemIconProps) => (\n    <div style={style} className={className}>\n      {children}\n    </div>\n  ),\n  'ItemIcon'\n)\n\nconst Arrow = create(DropdownMenu.Arrow, 'Arrow')\n\nconst Sub = create(DropdownMenu.Sub, 'Sub')\n\nconst SubContent = create<MenuSubContentProps>(\n  (props) => (\n    <DropdownMenu.Portal>\n      <DropdownMenu.SubContent {...props} />\n    </DropdownMenu.Portal>\n  ),\n  'SubContent'\n)\n\nexport {\n  Root,\n  Trigger,\n  Content,\n  Item,\n  SubTrigger,\n  Group,\n  Separator,\n  CheckboxItem,\n  ItemIndicator,\n  ItemIcon,\n  Arrow,\n  Sub,\n  SubContent,\n}\n\nexport { ItemImage } from '../menu/web-primitives/item-image'\nexport { Label } from './web/label'\n\nexport { ItemTitle, ItemSubtitle } from '../menu'\n"]}