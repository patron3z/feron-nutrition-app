{"version":3,"sources":["context-menu.tsx"],"names":["Root","ContextMenu","Trigger","Content","props","Item","e","shouldDismissMenuOnSelect","preventDefault","onSelect","SubTrigger","Group","Separator","CheckboxItem","onValueChange","value","current","next","ItemIndicator","ItemIcon","style","className","children","Preview","Arrow","Sub","SubContent","Auxiliary","_"],"mappings":"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","sourcesContent":["import * as ContextMenu from '@radix-ui/react-context-menu'\nimport React from 'react'\n\nimport type {\n  ContextMenuContentProps,\n  MenuCheckboxItemProps,\n  MenuItemIconProps,\n  ContextMenuSubContentProps,\n  ContextMenuAuxliliaryProps,\n  MenuItemProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  ContextMenuPreviewProps,\n} from '../menu'\nimport { create } from '../menu/display-names'\n\nconst Root = create(ContextMenu.Root, 'Root')\n\nconst Trigger = create(ContextMenu.Trigger, 'Trigger')\n\nconst Content = create<ContextMenuContentProps>(\n  (props) => (\n    <ContextMenu.Portal>\n      <ContextMenu.Content {...props} />\n    </ContextMenu.Portal>\n  ),\n  'Content'\n)\n\nconst Item = create<MenuItemProps>((props) => {\n  return (\n    <ContextMenu.Item\n      {...props}\n      onSelect={(e) => {\n        if (props.shouldDismissMenuOnSelect === false) {\n          e.preventDefault()\n        }\n        props.onSelect?.()\n      }}\n    />\n  )\n}, 'Item')\n\nconst SubTrigger = create<MenuSubTriggerProps>(\n  (props) => <ContextMenu.SubTrigger {...props} />,\n  'SubTrigger'\n)\n\nconst Group = create(ContextMenu.Group, 'Group')\n\nconst Separator = create(ContextMenu.Separator, 'Separator')\n\nconst CheckboxItem = create<MenuCheckboxItemProps>(\n  ({ shouldDismissMenuOnSelect, onValueChange, value, ...props }) => {\n    return (\n      <ContextMenu.CheckboxItem\n        {...props}\n        checked={typeof value === 'boolean' ? value : value !== 'off'}\n        onSelect={(e) => {\n          const current =\n            value === true ? 'on' : value === false ? 'off' : value\n          const next = current === 'on' ? 'off' : 'on'\n\n          onValueChange?.(next, current)\n\n          if (shouldDismissMenuOnSelect === false) {\n            e.preventDefault()\n          }\n        }}\n      />\n    )\n  },\n  'CheckboxItem'\n)\n\nconst ItemIndicator = create(ContextMenu.ItemIndicator, 'ItemIndicator')\n\nconst ItemIcon = create(\n  ({ style, className, children }: MenuItemIconProps) => (\n    <div style={style} className={className}>\n      {children}\n    </div>\n  ),\n  'ItemIcon'\n)\n\nconst Preview = create<ContextMenuPreviewProps>(() => null, 'Preview')\n\nconst Arrow = create(ContextMenu.Arrow, 'Arrow')\n\nconst Sub = create<MenuSubProps>(\n  (props) => <ContextMenu.Sub {...props} />,\n  'Sub'\n)\n\nconst SubContent = create<ContextMenuSubContentProps>(\n  (props) => (\n    <ContextMenu.Portal>\n      <ContextMenu.SubContent {...props} />\n    </ContextMenu.Portal>\n  ),\n  'SubContent'\n)\n\nconst Auxiliary = create<ContextMenuAuxliliaryProps>((_) => null, 'Auxiliary')\n\nexport {\n  Root,\n  Trigger,\n  Content,\n  Item,\n  SubTrigger,\n  Group,\n  Separator,\n  CheckboxItem,\n  ItemIndicator,\n  ItemIcon,\n  Preview,\n  Arrow,\n  Sub,\n  SubContent,\n  Auxiliary,\n}\n\nexport { ItemImage } from '../menu/web-primitives/item-image'\nexport { Label } from './web/label'\n\nexport { ItemTitle, ItemSubtitle } from '../menu'\n"]}