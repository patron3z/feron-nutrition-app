{"version":3,"sources":["index.android.tsx"],"names":["createAndroidMenu","Menu","Trigger","children","style","asChild","props","Auxiliary","Group","Content","console","error","ItemTitle","Error","ItemIcon","androidIconName","warn","ItemImage","_","ItemSubtitle","Item","titleChild","targetChildren","length","SubTrigger","Sub","SubContent","CheckboxItem","Label","Root","trigger","content","callbacks","getItemFromChild","child","index","title","key","subtitle","menuAttributes","disabled","destructive","hidden","icon","maybeTitle","textValue","Array","isArray","stringTitle","isString","i","text","subtitleChild","iconChildren","maybeIndexKey","startsWith","substring","undefined","isNaN","Number","toLowerCase","replace","onSelect","menuState","value","currentState","nextState","onValueChange","mapItemsChildren","Children","map","item","flat","_child","finalItem","id","image","attributes","hasItemIndicator","ItemIndicator","state","triggerItemChild","triggerItem","nestedContent","nestedItems","filter","filterNull","menuConfig","subactions","menuItems","label","menuTitle","shouldOpenOnLongPress","action","nativeEvent","event","onOpenChange","Separator","Preview","Arrow"],"mappings":"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","sourcesContent":["import React, { Children, ReactElement, cloneElement } from 'react'\n\nimport { MenuView } from '@react-native-menu/menu'\n\nimport {\n  flattenChildren,\n  pickChildren,\n  isInstanceOfComponent,\n} from '../children'\nimport { create } from '../display-names'\nimport { filterNull } from '../filter-null'\nimport type {\n  MenuContentProps,\n  MenuGroupProps,\n  MenuItemProps,\n  MenuItemSubtitleProps,\n  MenuItemTitleProps,\n  MenuRootProps,\n  MenuSubTriggerProps,\n  MenuTriggerProps,\n  MenuItemIconProps,\n  MenuCheckboxItemProps,\n  MenuSeparatorProps,\n  MenuItemImageProps,\n  MenuItemIndicatorProps,\n  MenuLabelProps,\n  ContextMenuPreviewProps,\n  ContextMenuContentProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubContentProps,\n  ContextMenuAuxliliaryProps,\n} from '../types'\nimport { View } from 'react-native'\n\nconst createAndroidMenu = (Menu: 'ContextMenu' | 'DropdownMenu') => {\n  const Trigger = create(\n    ({ children, style, asChild, ...props }: MenuTriggerProps) => {\n      if (asChild) {\n        return cloneElement(children, {\n          style,\n          ...props,\n        })\n      }\n      return <View style={style as any}>{children}</View>\n    },\n    'Trigger'\n  )\n\n  const Auxiliary = create(\n    ({}: ContextMenuAuxliliaryProps) => null,\n    'Auxiliary'\n  )\n\n  const Group = create(({ children }: MenuGroupProps) => {\n    return <>{children}</>\n  }, 'Group')\n\n  const Content = create(\n    ({ children }: MenuContentProps | ContextMenuContentProps) => {\n      if (!children) {\n        console.error(`[zeego] <Content /> children must be written directly inline.\n\nYou cannot wrap this component into its own component. It should look like this:\n\n<Root>\n  <Content>\n    <Item />\n    <Item />\n  </Content>\n</Root>\n\nNotice that the <Item /> are all children of the <Content /> component. That's important.\n\nIf you want to use a custom component as your <Content />, you can use the create() method. But you still need to pass all items as children of <Content />.`)\n      }\n      return <>{children}</>\n    },\n    'Content'\n  )\n\n  const ItemTitle = create(({ children }: MenuItemTitleProps) => {\n    if (typeof children != 'string') {\n      throw new Error('[zeego] <ItemTitle /> child must be a string')\n    }\n    return <>{children}</>\n  }, 'ItemTitle')\n\n  const ItemIcon = create((props: MenuItemIconProps) => {\n    if (!props.androidIconName) {\n      console.warn(\n        '[zeego] <ItemIcon /> missing androidIconName prop. Will do nothing on android. Consider passing an androidIconName or switching to <ItemImage />.'\n      )\n    }\n    return <>{}</>\n  }, 'ItemIcon')\n\n  const ItemImage = create((_: MenuItemImageProps) => {\n    return null\n  }, 'ItemImage')\n\n  const ItemSubtitle = create(({ children }: MenuItemSubtitleProps) => {\n    if (children && typeof children != 'string') {\n      throw new Error('[zeego] <ItemSubtitle /> child must be a string')\n    }\n    return <>{children}</>\n  }, 'ItemSubtitle')\n\n  const Item = create(({ children }: MenuItemProps) => {\n    const titleChild = pickChildren(children, ItemTitle).targetChildren\n    if (typeof children != 'string' && !titleChild?.length) {\n      console.error(\n        `[zeego] Invalid <Item />. It either needs <ItemTitle /> in the children.\n\n<Item>\n  <ItemTitle>\n    Title here\n  </ItemTitle>\n</Item>\n  `\n      )\n    }\n    return <>{children}</>\n  }, 'Item')\n\n  const SubTrigger = create(({ children }: MenuSubTriggerProps) => {\n    const titleChild = pickChildren(children, ItemTitle).targetChildren\n    if (typeof children != 'string' && !titleChild?.length) {\n      console.error(\n        `[zeego] Invalid <SubTrigger />. It either needs an <ItemTitle /> in the children.\n\n<SubTrigger>\n  <ItemTitle>\n    Title here\n  </ItemTitle>\n</SubTrigger>\n  `\n      )\n    }\n    return <>{children}</>\n  }, 'SubTrigger')\n  const Sub = create((_: MenuSubProps) => <></>, 'Sub')\n  const SubContent = create((_: MenuSubContentProps) => <></>, 'SubContent')\n\n  const CheckboxItem = create(({}: MenuCheckboxItemProps) => {\n    return <></>\n  }, 'CheckboxItem')\n\n  const Label = create(({ children }: MenuLabelProps) => {\n    if (typeof children != 'string') {\n      console.error('[zeego] <Label /> children must be a string.')\n    }\n    return <></>\n  }, 'Label')\n\n  type MenuAttributes = {\n    disabled?: boolean\n    destructive?: boolean\n    hidden?: boolean\n  }\n\n  type MenuConfig = {\n    id?: string\n    title: string\n    subactions: (MenuItem | MenuConfig)[]\n    attributes?: MenuAttributes\n    image?: MenuItemIcon\n  }\n\n  type MenuItemIcon = string\n\n  type MenuItem = {\n    id: string\n    title: string\n    titleColor?: string\n    subtitle?: string\n    image?: string\n    imageColor?: string\n    state?: 'on' | 'off' | 'mixed'\n    attributes?: MenuAttributes\n  }\n\n  const Root = create((props: MenuRootProps) => {\n    const trigger = pickChildren<MenuTriggerProps>(props.children, Trigger)\n    const content = pickChildren<MenuContentProps | ContextMenuContentProps>(\n      props.children,\n      Content\n    ).targetChildren?.[0]\n\n    const callbacks: Record<string, () => void> = {}\n\n    const getItemFromChild = (\n      child: ReactElement<\n        MenuItemProps | MenuSubTriggerProps | MenuCheckboxItemProps\n      >,\n      index: number\n    ) => {\n      let title: string | undefined\n      const key: string = child.key ? `${child.key}` : `item-${index}`\n      let subtitle: string | undefined\n      const menuAttributes: MenuAttributes = {}\n\n      if (child.props.disabled) {\n        menuAttributes.disabled = true\n      }\n      if (child.props.destructive) {\n        menuAttributes.destructive = true\n      }\n      if (child.props.hidden) {\n        menuAttributes.hidden = true\n      }\n\n      let icon: MenuItem['image']\n\n      if (typeof child.props.children == 'string') {\n        title = child.props.children\n      } else {\n        const titleChild = pickChildren<MenuItemTitleProps>(\n          child.props.children,\n          ItemTitle\n        ).targetChildren\n\n        let maybeTitle =\n          child.props.textValue ?? titleChild?.[0]?.props.children\n\n        if (Array.isArray(maybeTitle)) {\n          /**\n           * Use case: <ItemTitle>Here is some {text}</ItemTitle>\n           * React will turn that into ['Here is some ', text] as an array\n           * So we need to 1) detect that it's all strings and 2) join them together\n           */\n          let stringTitle = ''\n          let isString = false\n\n          for (let i = 0; i < maybeTitle.length; i++) {\n            const text = maybeTitle[i]\n            if (text == null) {\n              continue\n            }\n            if (typeof text == 'string' || typeof text == 'number') {\n              stringTitle += text\n              isString = true\n            } else {\n              isString = false\n              break\n            }\n          }\n\n          if (isString) {\n            maybeTitle = stringTitle\n          }\n        }\n\n        if (typeof maybeTitle === 'string') {\n          title = maybeTitle\n        } else {\n          console.error(\n            `[zeego] Invalid <${Menu}.Item key=\"${key}\" /> Missing valid title. Make sure you do one of the following:\n  \n  1. pass a string as the child of <${Menu}.ItemTitle />, nested directly inside of <${Menu}.Item />.\n  2. OR, use the textValue prop on <${Menu}.Item textValue=\"Some value\" />`\n          )\n        }\n\n        const subtitleChild = pickChildren<MenuItemSubtitleProps>(\n          child.props.children,\n          ItemSubtitle\n        ).targetChildren\n        if (typeof subtitleChild?.[0]?.props.children == 'string') {\n          subtitle = subtitleChild[0].props.children\n        }\n\n        const iconChildren = pickChildren<MenuItemIconProps>(\n          child.props.children,\n          ItemIcon\n        ).targetChildren\n\n        if (iconChildren?.[0]?.props.androidIconName) {\n          icon = iconChildren[0].props.androidIconName\n        }\n      }\n      if (title) {\n        const maybeIndexKey =\n          typeof child.key == 'string' && child.key.startsWith('.')\n            ? child.key.substring(1)\n            : undefined\n\n        if (\n          // if the key doesn't exist as a string\n          typeof child.key != 'string' ||\n          // or if flattenChildren assigned the key as `.${key}${index}`\n          (child.key.startsWith('.') && !isNaN(Number(maybeIndexKey)))\n        ) {\n          console.warn(\n            `[zeego] <Item /> is missing a unique key. Pass a unique key string for each item, such as: <Item key=\"${\n              title.toLowerCase().replace(/ /g, '-') || `action-${index}`\n            }\" />. Falling back to index (${key}) instead, but this may have negative consequences.`\n          )\n        }\n        if ('onSelect' in child.props && child.props.onSelect) {\n          callbacks[key] = child.props.onSelect\n        } else if ('onValueChange' in child.props) {\n          const menuState = child.props.value\n          const currentState =\n            menuState === true ? 'on' : menuState === false ? 'off' : menuState\n          const nextState =\n            currentState === 'mixed' || currentState === 'on' ? 'off' : 'on'\n          const { onValueChange } = child.props\n          callbacks[key] = () => {\n            onValueChange?.(nextState, currentState)\n          }\n        }\n\n        return {\n          key,\n          title,\n          subtitle,\n          menuAttributes,\n          icon,\n        }\n      }\n      return\n    }\n\n    const mapItemsChildren = (\n      children: React.ReactNode\n    ): ((MenuItem | MenuConfig) | null)[] => {\n      return Children.map(\n        flattenChildren(children)\n          .map((item) => {\n            // android menu doesn't support group feature like iOS `displayInline` option in menu\n            if (\n              isInstanceOfComponent(item, Group) &&\n              typeof item === 'object'\n            ) {\n              return flattenChildren(item.props.children)\n            }\n            return item\n          })\n          .flat(),\n        (_child, index) => {\n          if (isInstanceOfComponent(_child, Item)) {\n            const child = _child as ReactElement<MenuItemProps>\n\n            const item = getItemFromChild(child, index)\n            if (item) {\n              const { icon, title, key, menuAttributes, subtitle } = item\n              const finalItem: MenuItem = {\n                id: key,\n                title,\n                image: icon,\n                attributes: menuAttributes,\n                subtitle,\n              }\n              return finalItem\n            }\n          } else if (isInstanceOfComponent(_child, CheckboxItem)) {\n            const child = _child as ReactElement<MenuCheckboxItemProps>\n\n            const item = getItemFromChild(child, index)\n            if (item) {\n              const { icon, title, key, menuAttributes, subtitle } = item\n              const menuState = child.props.value\n              const currentState =\n                menuState === true\n                  ? 'on'\n                  : menuState === false\n                  ? 'off'\n                  : menuState\n\n              const hasItemIndicator =\n                pickChildren(child.props.children, ItemIndicator)\n                  .targetChildren?.[0] !== undefined\n\n              let image = icon\n\n              if (hasItemIndicator && !icon) {\n                image =\n                  currentState === 'on'\n                    ? 'checkbox_on_background'\n                    : 'checkbox_off_background'\n              }\n\n              const finalItem: MenuItem = {\n                id: key,\n                title,\n                image,\n                attributes: menuAttributes,\n                subtitle,\n                state: currentState,\n              }\n              return finalItem\n            }\n          } else if (isInstanceOfComponent(_child, Sub)) {\n            const child = _child as ReactElement<MenuRootProps>\n            const key: string = child.key ? `${child.key}` : `sub-${index}`\n            const triggerItemChild = pickChildren<MenuSubTriggerProps>(\n              child.props.children,\n              SubTrigger\n            ).targetChildren?.[0]\n\n            const triggerItem =\n              triggerItemChild && getItemFromChild(triggerItemChild, index)\n            if (triggerItem) {\n              const nestedContent = pickChildren<MenuContentProps>(\n                child.props.children,\n                SubContent\n              ).targetChildren?.[0]\n\n              if (nestedContent) {\n                const nestedItems = mapItemsChildren(\n                  nestedContent.props.children\n                ).filter(filterNull)\n\n                if (nestedItems.length) {\n                  const menuConfig: MenuConfig = {\n                    id: key,\n                    title: triggerItem?.title,\n                    image: triggerItem?.icon,\n                    subactions: nestedItems,\n                    attributes: triggerItem.menuAttributes,\n                  }\n                  return menuConfig\n                }\n              }\n            }\n          }\n          return null\n        }\n      )\n    }\n\n    const menuItems = mapItemsChildren(content?.props.children).filter(\n      filterNull\n    )\n\n    const label = pickChildren<MenuLabelProps>(content?.props.children, Label)\n      .targetChildren?.[0]?.props.children\n    let menuTitle = ''\n    if (typeof label == 'string') {\n      menuTitle = label\n    }\n\n    const triggerItem = trigger.targetChildren?.[0]\n\n    let shouldOpenOnLongPress = Menu === 'ContextMenu'\n\n    if (triggerItem?.props.action) {\n      shouldOpenOnLongPress = triggerItem.props.action === 'longPress'\n    }\n\n    return (\n      <MenuView\n        title={menuTitle}\n        style={props.style as any}\n        onPressAction={({ nativeEvent }) => {\n          callbacks[nativeEvent.event]?.()\n        }}\n        shouldOpenOnLongPress={shouldOpenOnLongPress}\n        actions={menuItems}\n        // @ts-ignore\n        onOpenMenu={() => {\n          props.onOpenChange?.(true)\n        }}\n        // @ts-ignore\n        onCloseMenu={() => {\n          props.onOpenChange?.(false)\n        }}\n      >\n        {triggerItem}\n      </MenuView>\n    )\n  }, 'Root')\n\n  const Separator = create((_: MenuSeparatorProps) => {\n    return <></>\n  }, 'Separator')\n\n  const ItemIndicator = create(\n    (_: MenuItemIndicatorProps) => <></>,\n    'ItemIndicator'\n  )\n\n  const Preview = create((_: ContextMenuPreviewProps) => <></>, 'Preview')\n\n  const Arrow = create((_: MenuArrowProps) => <></>, 'Arrow')\n\n  return {\n    Root,\n    Trigger,\n    Content,\n    Item,\n    ItemTitle,\n    ItemSubtitle,\n    SubTrigger,\n    Group,\n    Separator,\n    ItemIcon,\n    ItemIndicator,\n    CheckboxItem,\n    ItemImage,\n    Label,\n    Preview,\n    Arrow,\n    Sub,\n    SubContent,\n    Auxiliary,\n  }\n}\n\nexport { createAndroidMenu }\n"]}