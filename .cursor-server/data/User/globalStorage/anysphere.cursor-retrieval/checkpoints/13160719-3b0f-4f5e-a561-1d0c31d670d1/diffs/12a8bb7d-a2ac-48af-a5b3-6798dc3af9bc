{"fsPath":"\\home\\user\\workspace\\src\\screens\\CameraScreen.tsx","fileUuid":"12a8bb7d-a2ac-48af-a5b3-6798dc3af9bc","fileSizeBytes":11384,"numLines":293,"diffChanges":[{"originalStartLineNumberOneIndexed":33,"originalEndLineNumberExclusiveOneIndexed":33,"modifiedStartLineNumberOneIndexed":33,"modifiedEndLineNumberExclusiveOneIndexed":114,"addedLines":["","  // Fonction unifi√©e pour traiter l'analyse des aliments","  const processFoodAnalysis = async (base64: string, dateTarget: string, imageUri: string) => {","    // Try cache first","    const cachedResult = await FoodCache.get(base64);","    let result = cachedResult;","    ","    if (!result) {","      const analysisPromise = import(\"../api/nutrition-ai\").then(({ analyzeFoodWithUSDAAndGemini }) => ","        analyzeFoodWithUSDAAndGemini(base64)","      );","      const timeoutPromise = new Promise((_, reject) => ","        setTimeout(() => reject(new Error(\"Timeout d'analyse (15s)\")), 15000)","      );","      ","      result = await Promise.race([analysisPromise, timeoutPromise]) as any;","      ","      if (result && Array.isArray(result.foods) && result.foods.length > 0) {","        await FoodCache.set(base64, result.foods, result.confidence || 0.8);","      }","    }","","    const foods: Food[] = result && Array.isArray(result.foods) ? result.foods : [];","    const confidence = (result && typeof result.confidence === \"number\") ? result.confidence : 0.7;","    ","    console.log('üìä Analyse termin√©e:', {","      foodsCount: foods.length,","      confidence,","      fromCache: !!cachedResult,","      scales: foods.map(f => ({ name: f.name, scale: f.portionScale }))","    });","","    if (foods.length === 0) {","      throw new Error(\"Aucun aliment d√©tect√© dans l'image\");","    }","","    const totals = foods.reduce(","      (acc, f) => ({","        calories: acc.calories + (f.calories || 0),","        protein: acc.protein + (f.protein || 0),","        carbs: acc.carbs + (f.carbs || 0),","        fat: acc.fat + (f.fat || 0),","      }),","      { calories: 0, protein: 0, carbs: 0, fat: 0 }","    );","","    if (confidence < 0.8) {","      // Demander confirmation √† l'utilisateur","      clearPendingScan(dateTarget);","      navigation.navigate(\"ConfirmFoods\", {","        aiFoodsFromImage: foods,","        aiConfidence: confidence,","        targetDate: dateTarget,","        imageUri,","      });","    } else {","      // Ajout automatique si confiance √©lev√©e","      const mealFoods: MealFood[] = foods.map((f) => ({ food: f, quantity: 1, unit: \"portion\" }));","      const meal: Meal = {","        id: Date.now().toString(),","        name: `Scan - ${foods.map(f => f.name).join(', ')}`,","        foods: mealFoods,","        totalCalories: totals.calories,","        totalProtein: totals.protein,","        totalCarbs: totals.carbs,","        totalFat: totals.fat,","        timestamp: new Date(),","        mealType: \"snack\",","        imageUri,","      };","","      addMealForDate(dateTarget, meal);","      clearPendingScan(dateTarget);","      ","      console.log('‚úÖ Repas ajout√© automatiquement:', {","        name: meal.name,","        calories: meal.totalCalories,","        confidence","      });","    }","  };"],"tokenizedAddedLines":[14,1000240,1000241,1000242,1000243,1000244,1000245,1000246,1000247,1000248,1000249,1000250,1000251,1000249,1000252,1000253,1000252,1000254,1000255,107,113,14,1000256,1000257,1000245,1000258,1000259,1000260,1000261,1000262,1000263,14,1000264,1000265,113,14,1000266,1000267,1000268,1000269,1000270,1000271,1000272,1000273,146,14,1000274,1000275,1000276,1000277,1000278,1000279,1000280,1000281,1000282,1000283,1000284,1000285,1000286,1000287,1000288,1000289,1000290,1000291,1000292,1000293,1000294,1000295,1000281,1000296,14,1000297,1000276,1000252,1000298,1000299,1000300,1000301,1000282,113,114]},{"originalStartLineNumberOneIndexed":52,"originalEndLineNumberExclusiveOneIndexed":105,"modifiedStartLineNumberOneIndexed":133,"modifiedEndLineNumberExclusiveOneIndexed":134,"addedLines":["            await processFoodAnalysis(base64, pendingDate, imageUri);"],"tokenizedAddedLines":[1000302]},{"originalStartLineNumberOneIndexed":106,"originalEndLineNumberExclusiveOneIndexed":106,"modifiedStartLineNumberOneIndexed":135,"modifiedEndLineNumberExclusiveOneIndexed":136,"addedLines":["            console.error('‚ùå Erreur analyse cam√©ra:', analysisError);"],"tokenizedAddedLines":[1000303]},{"originalStartLineNumberOneIndexed":110,"originalEndLineNumberExclusiveOneIndexed":111,"modifiedStartLineNumberOneIndexed":140,"modifiedEndLineNumberExclusiveOneIndexed":141,"addedLines":["                params: { error: \"Analyse indisponible. R√©essayez ou ajoutez manuellement.\" },"],"tokenizedAddedLines":[1000304]},{"originalStartLineNumberOneIndexed":112,"originalEndLineNumberExclusiveOneIndexed":113,"modifiedStartLineNumberOneIndexed":142,"modifiedEndLineNumberExclusiveOneIndexed":145,"addedLines":["            } catch (navError) {","              console.error('‚ùå Erreur navigation:', navError);","            }"],"tokenizedAddedLines":[1000305,1000306,60]},{"originalStartLineNumberOneIndexed":207,"originalEndLineNumberExclusiveOneIndexed":234,"modifiedStartLineNumberOneIndexed":239,"modifiedEndLineNumberExclusiveOneIndexed":246,"addedLines":["                            try {","                              const base64 = result.assets[0].base64;","                              const imageUri = await saveScanImage(base64);","                              const pendingDate = targetDate || getTodayISO();","                              ","                              // Utiliser la fonction unifi√©e","                              await processFoodAnalysis(base64, pendingDate, imageUri);"],"tokenizedAddedLines":[1000307,1000308,1000309,1000310,1000311,1000312,1000313]},{"originalStartLineNumberOneIndexed":235,"originalEndLineNumberExclusiveOneIndexed":235,"modifiedStartLineNumberOneIndexed":247,"modifiedEndLineNumberExclusiveOneIndexed":254,"addedLines":["                            } catch (galleryError) {","                              console.error('‚ùå Erreur analyse galerie:', galleryError);","                              navigation.navigate(\"Main\", {","                                screen: \"Dashboard\",","                                params: { error: \"Impossible d'analyser l'image de la galerie. R√©essayez ou ajoutez manuellement.\" },","                              });","                            }"],"tokenizedAddedLines":[1000314,1000315,1000316,1000317,1000318,1000319,1000320]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}