{"fsPath":"\\home\\user\\workspace\\src\\api\\nutrition-ai.ts","fileUuid":"de3713e3-a175-4ebd-a554-477f848bef80","fileSizeBytes":17928,"numLines":509,"diffChanges":[{"originalStartLineNumberOneIndexed":119,"originalEndLineNumberExclusiveOneIndexed":131,"modifiedStartLineNumberOneIndexed":119,"modifiedEndLineNumberExclusiveOneIndexed":134,"addedLines":["      identificationPrompt = `Analyze this food image and identify each visible food item with portion scales.","","IMPORTANT: Respond ONLY with food lines in this EXACT format:","FOOD_NAME | SCALE_FACTOR | REASONING","","Rules:","- Use simple food names (no asterisks, parentheses, or formatting)","- Scale: 0.5 = half portion, 1.0 = standard, 2.0 = double portion","- Do NOT include headers, separators, or explanatory text","- Maximum 6 foods per image","","Examples:","Grilled chicken breast | 1.2 | Larger than standard portion","Rice | 0.8 | Small serving visible","Broccoli | 1.5 | Large portion on plate"],"tokenizedAddedLines":[1000345,3,1000346,1000347,3,32,1000348,1000349,1000350,1000351,3,1000352,1000353,1000354,1000355]},{"originalStartLineNumberOneIndexed":134,"originalEndLineNumberExclusiveOneIndexed":135,"modifiedStartLineNumberOneIndexed":137,"modifiedEndLineNumberExclusiveOneIndexed":150,"addedLines":["      identificationPrompt = `Identify foods in: \"${description}\"","","IMPORTANT: Respond ONLY with food lines in this EXACT format:","FOOD_NAME | SCALE_FACTOR | REASONING","","Rules:","- Use simple food names (no asterisks, parentheses, or formatting)","- Scale: 1.0 = standard serving (adjust based on description context)","- Do NOT include headers, separators, or explanatory text","","Examples:","Chicken breast | 1.0 | Standard serving mentioned","Rice | 1.0 | Typical portion size`;"],"tokenizedAddedLines":[1000356,3,1000346,1000347,3,32,1000348,1000357,1000350,3,1000352,1000358,1000359]},{"originalStartLineNumberOneIndexed":159,"originalEndLineNumberExclusiveOneIndexed":160,"modifiedStartLineNumberOneIndexed":174,"modifiedEndLineNumberExclusiveOneIndexed":184,"addedLines":["      let name = (parts[0] || line).replace(/^[-*•]\\s*/, \"\");","      ","      // Nettoyer le nom d'aliment","      name = name","        .replace(/\\*+/g, '') // Enlever tous les astérisques","        .replace(/\\s*\\([^)]*\\)/g, '') // Enlever les (parenthèses)","        .replace(/^FOOD_NAME$/i, '') // Enlever les en-têtes de tableau","        .replace(/^-+$/, '') // Enlever les lignes de séparation","        .trim();","      "],"tokenizedAddedLines":[1000360,1000361,1000362,1000363,1000364,1000365,1000366,1000367,1000368,1000361]},{"originalStartLineNumberOneIndexed":163,"originalEndLineNumberExclusiveOneIndexed":164,"modifiedStartLineNumberOneIndexed":187,"modifiedEndLineNumberExclusiveOneIndexed":194,"addedLines":["    }).filter((f: any) => {","      // Filtrer les entrées vides, les en-têtes et les séparateurs","      return !!f.name && ","             f.name.length > 0 && ","             !/^(food_name|scale_factor|reasoning|-+)$/i.test(f.name) &&","             !/^-+$/.test(f.name);","    });"],"tokenizedAddedLines":[1000369,1000370,1000371,1000372,1000373,1000374,327]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}